commit 5c2a77219d5bd92c48d8d5d5e71ba28228c282a1
Author: Roman Yurchak <rth.yurchak@pm.me>
Date:   Mon Oct 8 10:53:11 2018 +0200

    Removes files that require LAPACK

diff --git a/scipy/linalg/__init__.py b/scipy/linalg/__init__.py
index fd02851bf..faa6723d2 100644
--- a/scipy/linalg/__init__.py
+++ b/scipy/linalg/__init__.py
@@ -181,13 +181,16 @@ from ._decomp_qz import *
 from .decomp_svd import *
 from .decomp_schur import *
 from ._decomp_polar import *
-from .matfuncs import *
-from .blas import *
-from .lapack import *
-from .special_matrices import *
-from ._solvers import *
-from ._procrustes import *
-from ._decomp_update import *
+try:
+    from .matfuncs import *
+    from .blas import *
+    from .lapack import *
+    from .special_matrices import *
+    from ._solvers import *
+    from ._procrustes import *
+    from ._decomp_update import *
+except ImportError:
+    pass
 
 __all__ = [s for s in dir() if not s.startswith('_')]
 
diff --git a/scipy/linalg/setup.py b/scipy/linalg/setup.py
index 2c9b9ba22..035b4bb80 100755
--- a/scipy/linalg/setup.py
+++ b/scipy/linalg/setup.py
@@ -16,8 +16,8 @@ def configuration(parent_package='', top_path=None):
 
     lapack_opt = get_info('lapack_opt')
 
-    if not lapack_opt:
-        raise NotFoundError('no lapack/blas resources found')
+    # if not lapack_opt:
+    #    raise NotFoundError('no lapack/blas resources found')
 
     atlas_version = ([v[3:-3] for k, v in lapack_opt.get('define_macros', [])
                       if k == 'ATLAS_INFO']+[None])[0]
@@ -29,45 +29,45 @@ def configuration(parent_package='', top_path=None):
     sources += get_g77_abi_wrappers(lapack_opt)
     sources += get_sgemv_fix(lapack_opt)
 
-    config.add_extension('_fblas',
-                         sources=sources,
-                         depends=['fblas_l?.pyf.src'],
-                         extra_info=lapack_opt
-                         )
+    #config.add_extension('_fblas',
+    #                     sources=sources,
+    #                     depends=['fblas_l?.pyf.src'],
+    #                     extra_info=lapack_opt
+    #                     )
 
     # flapack:
-    sources = ['flapack.pyf.src']
-    sources += get_g77_abi_wrappers(lapack_opt)
-    dep_pfx = join('src', 'lapack_deprecations')
-    deprecated_lapack_routines = [join(dep_pfx, c + 'gegv.f') for c in 'cdsz']
-    sources += deprecated_lapack_routines
-
-    config.add_extension('_flapack',
-                         sources=sources,
-                         depends=['flapack_user.pyf.src'],
-                         extra_info=lapack_opt
-                         )
-
-    if atlas_version is not None:
-        # cblas:
-        config.add_extension('_cblas',
-                             sources=['cblas.pyf.src'],
-                             depends=['cblas.pyf.src', 'cblas_l1.pyf.src'],
-                             extra_info=lapack_opt
-                             )
-
-        # clapack:
-        config.add_extension('_clapack',
-                             sources=['clapack.pyf.src'],
-                             depends=['clapack.pyf.src'],
-                             extra_info=lapack_opt
-                             )
-
-    # _flinalg:
-    config.add_extension('_flinalg',
-                         sources=[join('src', 'det.f'), join('src', 'lu.f')],
-                         extra_info=lapack_opt
-                         )
+    #sources = ['flapack.pyf.src']
+    #sources += get_g77_abi_wrappers(lapack_opt)
+    #dep_pfx = join('src', 'lapack_deprecations')
+    #deprecated_lapack_routines = [join(dep_pfx, c + 'gegv.f') for c in 'cdsz']
+    #sources += deprecated_lapack_routines
+
+    #config.add_extension('_flapack',
+    #                     sources=sources,
+    #                     depends=['flapack_user.pyf.src'],
+    #                     extra_info=lapack_opt
+    #                     )
+
+    #if atlas_version is not None:
+    #    # cblas:
+    #    config.add_extension('_cblas',
+    #                         sources=['cblas.pyf.src'],
+    #                         depends=['cblas.pyf.src', 'cblas_l1.pyf.src'],
+    #                         extra_info=lapack_opt
+    #                         )
+
+    #    # clapack:
+    #    config.add_extension('_clapack',
+    #                         sources=['clapack.pyf.src'],
+    #                         depends=['clapack.pyf.src'],
+    #                         extra_info=lapack_opt
+    #                         )
+
+    ## _flinalg:
+    #config.add_extension('_flinalg',
+    #                     sources=[join('src', 'det.f'), join('src', 'lu.f')],
+    #                     extra_info=lapack_opt
+    #                     )
 
     # _interpolative:
     routines_to_split = [
@@ -116,15 +116,15 @@ def configuration(parent_package='', top_path=None):
     dirname = os.path.split(os.path.abspath(__file__))[0]
     fnames = split_fortran_files(join(dirname, 'src', 'id_dist', 'src'),
                                  routines_to_split)
-    fnames = [join('src', 'id_dist', 'src', f) for f in fnames]
-    config.add_extension('_interpolative', fnames + ["interpolative.pyf"],
-                         extra_info=lapack_opt
-                         )
+    #fnames = [join('src', 'id_dist', 'src', f) for f in fnames]
+    #config.add_extension('_interpolative', fnames + ["interpolative.pyf"],
+    #                     extra_info=lapack_opt
+    #                     )
 
     # _calc_lwork:
-    config.add_extension('_calc_lwork',
-                         [join('src', 'calc_lwork.f')],
-                         extra_info=lapack_opt)
+    #config.add_extension('_calc_lwork',
+    #                     [join('src', 'calc_lwork.f')],
+    #                     extra_info=lapack_opt)
 
     # _solve_toeplitz:
     config.add_extension('_solve_toeplitz',
@@ -137,27 +137,27 @@ def configuration(parent_package='', top_path=None):
     config.add_data_files('cython_blas.pxd')
     config.add_data_files('cython_lapack.pxd')
 
-    sources = ['_blas_subroutine_wrappers.f', '_lapack_subroutine_wrappers.f']
-    sources += get_g77_abi_wrappers(lapack_opt)
-    sources += get_sgemv_fix(lapack_opt)
-    includes = numpy_info().get_include_dirs() + [get_python_inc()]
-    config.add_library('fwrappers', sources=sources, include_dirs=includes)
-
-    config.add_extension('cython_blas',
-                         sources=['cython_blas.c'],
-                         depends=['cython_blas.pyx', 'cython_blas.pxd',
-                                  'fortran_defs.h', '_blas_subroutines.h'],
-                         include_dirs=['.'],
-                         libraries=['fwrappers'],
-                         extra_info=lapack_opt)
-
-    config.add_extension('cython_lapack',
-                         sources=['cython_lapack.c'],
-                         depends=['cython_lapack.pyx', 'cython_lapack.pxd',
-                                  'fortran_defs.h', '_lapack_subroutines.h'],
-                         include_dirs=['.'],
-                         libraries=['fwrappers'],
-                         extra_info=lapack_opt)
+    #sources = ['_blas_subroutine_wrappers.f', '_lapack_subroutine_wrappers.f']
+    #sources += get_g77_abi_wrappers(lapack_opt)
+    #sources += get_sgemv_fix(lapack_opt)
+    #includes = numpy_info().get_include_dirs() + [get_python_inc()]
+    #config.add_library('fwrappers', sources=sources, include_dirs=includes)
+
+    #config.add_extension('cython_blas',
+    #                     sources=['cython_blas.c'],
+    #                     depends=['cython_blas.pyx', 'cython_blas.pxd',
+    #                              'fortran_defs.h', '_blas_subroutines.h'],
+    #                     include_dirs=['.'],
+    #                     libraries=['fwrappers'],
+    #                     extra_info=lapack_opt)
+
+    #config.add_extension('cython_lapack',
+    #                     sources=['cython_lapack.c'],
+    #                     depends=['cython_lapack.pyx', 'cython_lapack.pxd',
+    #                              'fortran_defs.h', '_lapack_subroutines.h'],
+    #                     include_dirs=['.'],
+    #                     libraries=['fwrappers'],
+    #                     extra_info=lapack_opt)
 
     config.add_extension('_decomp_update',
                          sources=['_decomp_update.c'])
diff --git a/scipy/sparse/linalg/eigen/arpack/setup.py b/scipy/sparse/linalg/eigen/arpack/setup.py
index a8175a9d5..c63b76dda 100755
--- a/scipy/sparse/linalg/eigen/arpack/setup.py
+++ b/scipy/sparse/linalg/eigen/arpack/setup.py
@@ -13,28 +13,28 @@ def configuration(parent_package='',top_path=None):
 
     lapack_opt = get_info('lapack_opt')
 
-    if not lapack_opt:
-        raise NotFoundError('no lapack/blas resources found')
+    #if not lapack_opt:
+    #    raise NotFoundError('no lapack/blas resources found')
 
     config = Configuration('arpack', parent_package, top_path)
 
-    arpack_sources = [join('ARPACK','SRC', '*.f')]
-    arpack_sources.extend([join('ARPACK','UTIL', '*.f')])
-    arpack_sources.extend([join('ARPACK','LAPACK', '*.f')])
+    #arpack_sources = [join('ARPACK','SRC', '*.f')]
+    #arpack_sources.extend([join('ARPACK','UTIL', '*.f')])
+    #arpack_sources.extend([join('ARPACK','LAPACK', '*.f')])
 
-    arpack_sources += get_g77_abi_wrappers(lapack_opt)
+    #arpack_sources += get_g77_abi_wrappers(lapack_opt)
 
-    config.add_library('arpack_scipy', sources=arpack_sources,
-                       include_dirs=[join('ARPACK', 'SRC')])
+    #config.add_library('arpack_scipy', sources=arpack_sources,
+    #                   include_dirs=[join('ARPACK', 'SRC')])
 
-    ext_sources = ['arpack.pyf.src']
-    ext_sources += get_sgemv_fix(lapack_opt)
-    config.add_extension('_arpack',
-                         sources=ext_sources,
-                         libraries=['arpack_scipy'],
-                         extra_info=lapack_opt,
-                         depends=arpack_sources,
-                         )
+    #ext_sources = ['arpack.pyf.src']
+    #ext_sources += get_sgemv_fix(lapack_opt)
+    #config.add_extension('_arpack',
+    #                     sources=ext_sources,
+    #                     libraries=['arpack_scipy'],
+    #                     extra_info=lapack_opt,
+    #                     depends=arpack_sources,
+    #                     )
 
     config.add_data_dir('tests')
     return config
diff --git a/scipy/sparse/linalg/isolve/setup.py b/scipy/sparse/linalg/isolve/setup.py
index becb9237a..17288207e 100755
--- a/scipy/sparse/linalg/isolve/setup.py
+++ b/scipy/sparse/linalg/isolve/setup.py
@@ -13,29 +13,29 @@ def configuration(parent_package='',top_path=None):
 
     lapack_opt = get_info('lapack_opt')
 
-    if not lapack_opt:
-        raise NotFoundError('no lapack/blas resources found')
-
-    # iterative methods
-    methods = ['BiCGREVCOM.f.src',
-               'BiCGSTABREVCOM.f.src',
-               'CGREVCOM.f.src',
-               'CGSREVCOM.f.src',
-#               'ChebyREVCOM.f.src',
-               'GMRESREVCOM.f.src',
-#               'JacobiREVCOM.f.src',
-               'QMRREVCOM.f.src',
-#               'SORREVCOM.f.src'
-               ]
-
-    Util = ['STOPTEST2.f.src','getbreak.f.src']
-    sources = Util + methods + ['_iterative.pyf.src']
-    sources = [join('iterative', x) for x in sources]
-    sources += get_g77_abi_wrappers(lapack_opt)
-
-    config.add_extension('_iterative',
-                         sources=sources,
-                         extra_info=lapack_opt)
+    #if not lapack_opt:
+    #    raise NotFoundError('no lapack/blas resources found')
+
+    ## iterative methods
+    #methods = ['BiCGREVCOM.f.src',
+    #           'BiCGSTABREVCOM.f.src',
+    #           'CGREVCOM.f.src',
+    #           'CGSREVCOM.f.src',
+#   #            'ChebyREVCOM.f.src',
+    #           'GMRESREVCOM.f.src',
+#   #            'JacobiREVCOM.f.src',
+    #           'QMRREVCOM.f.src',
+#   #            'SORREVCOM.f.src'
+    #           ]
+
+    #Util = ['STOPTEST2.f.src','getbreak.f.src']
+    #sources = Util + methods + ['_iterative.pyf.src']
+    #sources = [join('iterative', x) for x in sources]
+    #sources += get_g77_abi_wrappers(lapack_opt)
+
+    #config.add_extension('_iterative',
+    #                     sources=sources,
+    #                     extra_info=lapack_opt)
 
     config.add_data_dir('tests')
 
